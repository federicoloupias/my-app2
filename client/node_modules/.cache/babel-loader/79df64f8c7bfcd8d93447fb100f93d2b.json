{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-itinerary\\\\client\\\\src\\\\component\\\\FavButton.jsx\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addFav, removeFav } from '../actions/userActions';\nimport { loadUser } from '../actions/authActions';\n\nclass FavButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favoritos: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.loadUser();\n    this.setState({\n      favoritos: this.props.user.itinerariesFav\n    });\n  }\n\n  favActions() {\n    this.props.loadUser();\n    const email = this.props.user.email;\n    const itinerayId = this.props.itineraryId;\n\n    if (!this.props.user.itinerariesFav.includes(itinerayId)) {\n      console.log(\"se agrego el favorito\");\n      this.props.addFav(email, itinerayId);\n    } else {\n      console.log(\"Se elimino el favorito\");\n      this.props.removeFav(email, itinerayId);\n    }\n\n    this.props.loadUser();\n    this.setState({\n      favoritos: this.props.user.itinerariesFav\n    });\n    console.log(this.props.user.itinerariesFav.length);\n  }\n\n  showButtonFav() {\n    const itinerayId = this.props.itineraryId;\n\n    if (!this.state.favoritos.includes(itinerayId)) {\n      return React.createElement(Button, {\n        outline: true,\n        color: \"success\",\n        size: \"sm\",\n        onClick: this.favActions.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add Favourite\");\n    } else {\n      return React.createElement(Button, {\n        size: \"sm\",\n        color: \"success\",\n        onClick: this.favActions.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Favourite\");\n    }\n  }\n\n  render() {\n    return this.showButtonFav();\n  }\n\n} // ItineraryList.propTypes = {\n//     getItineraries: PropTypes.func.isRequired,\n//     itineraries: PropTypes.object.isRequired\n// }\n\n\nFavButton.propTypes = {\n  addFav: PropTypes.func.isRequired,\n  removeFav: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addFav,\n  removeFav,\n  loadUser\n})(FavButton);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-itinerary/client/src/component/FavButton.jsx"],"names":["React","Component","Button","connect","PropTypes","addFav","removeFav","loadUser","FavButton","constructor","props","state","favoritos","componentDidMount","setState","user","itinerariesFav","favActions","email","itinerayId","itineraryId","includes","console","log","length","showButtonFav","bind","render","propTypes","func","isRequired","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addFav, removeFav } from '../actions/userActions';\r\nimport { loadUser } from '../actions/authActions';\r\n\r\n\r\n\r\nclass FavButton extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      favoritos:[]\r\n    }\r\n  \r\n\r\n  }\r\n\r\n    static propTypes = {\r\n        addFav: PropTypes.func.isRequired,\r\n        removeFav: PropTypes.func.isRequired,\r\n        loadUser: PropTypes.func.isRequired\r\n      };\r\n\r\n      async componentDidMount(){\r\n\r\n        await this.props.loadUser()\r\n\r\n        this.setState({\r\n          favoritos : this.props.user.itinerariesFav\r\n        })\r\n\r\n      }\r\n   \r\n\r\n    favActions (){\r\n\r\n        this.props.loadUser()\r\n        \r\n\r\n        const email = this.props.user.email;\r\n        const itinerayId = this.props.itineraryId;\r\n    \r\n\r\n        if(!this.props.user.itinerariesFav.includes(itinerayId)){\r\n          console.log(\"se agrego el favorito\")\r\n          this.props.addFav(email, itinerayId);\r\n\r\n        }else{\r\n          console.log(\"Se elimino el favorito\")\r\n          this.props.removeFav(email,itinerayId)\r\n        }\r\n        \r\n        this.props.loadUser()\r\n        this.setState({\r\n          favoritos : this.props.user.itinerariesFav\r\n        })\r\n        console.log(this.props.user.itinerariesFav.length)\r\n    };\r\n    \r\nshowButtonFav(){\r\n  \r\n  const itinerayId = this.props.itineraryId;\r\n\r\n  if(!this.state.favoritos.includes(itinerayId)){\r\n    return <Button outline color=\"success\" size=\"sm\" onClick={this.favActions.bind(this)}>\r\n            Add Favourite\r\n        </Button>\r\n  }else{\r\n    return <Button size=\"sm\" color=\"success\"  onClick={this.favActions.bind(this)}>\r\n            Favourite\r\n        </Button>\r\n  }\r\n}\r\n\r\n    render(){\r\n\r\n        return(\r\n          this.showButtonFav()\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n// ItineraryList.propTypes = {\r\n//     getItineraries: PropTypes.func.isRequired,\r\n//     itineraries: PropTypes.object.isRequired\r\n// }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n \r\n  return {\r\n    user: state.auth.user\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addFav, removeFav, loadUser })(FavButton);"]},"metadata":{},"sourceType":"module"}