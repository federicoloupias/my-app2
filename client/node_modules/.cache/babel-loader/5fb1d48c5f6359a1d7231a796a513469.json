{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-itinerary\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_COMMENTS } from '../actions/types';\nconst initialState = {\n  comments: [],\n  aux: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_COMMENTS:\n      return _objectSpread({}, state, {\n        comments: [...action.payload]\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-itinerary/client/src/reducers/commentsReducer.js"],"names":["GET_COMMENTS","initialState","comments","aux","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,YAAR,QAA2B,kBAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,GAAG,EAAE;AAFc,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,YAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,QAAQ,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAX;AAFZ;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD","sourcesContent":["import {GET_COMMENTS} from '../actions/types'\r\n\r\nconst initialState = {\r\n  comments: [],\r\n  aux: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: [...action.payload],\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}