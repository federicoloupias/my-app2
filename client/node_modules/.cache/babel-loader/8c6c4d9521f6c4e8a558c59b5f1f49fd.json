{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-itinerary\\\\client\\\\src\\\\component\\\\Itinerary.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItineraries } from '../actions/itineraryActions';\nimport Activity from './Activity';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nclass ItineraryList extends Component {\n  async componentDidMount() {\n    let cityId = this.props.match.params.cityId;\n    await this.props.getItineraries(cityId);\n  }\n\n  render() {\n    // const { itineraries } = this.props.itineraries;\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.itineraries.map(itinerary => React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, itinerary.title, React.createElement(Activity, {\n      itineraryId: itinerary._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))));\n  }\n\n} // ItineraryList.propTypes = {\n//     getItineraries: PropTypes.func.isRequired,\n//     itineraries: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state.itinerario.itineraries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityId => dispatch(getItineraries(cityId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-itinerary/client/src/component/Itinerary.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItineraries","Activity","makeStyles","Grid","Paper","Typography","ButtonBase","ItineraryList","componentDidMount","cityId","props","match","params","render","itineraries","map","itinerary","title","_id","mapStateToProps","state","itinerario","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,aAAN,SAA4BX,SAA5B,CAAqC;AAIjC,QAAMY,iBAAN,GAA0B;AACxB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;AACC,UAAM,KAAKC,KAAL,CAAWV,cAAX,CAA0BS,MAA1B,CAAN;AACF;;AAIDI,EAAAA,MAAM,GAAE;AACN;AAIE,WAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,GAAvB,CAA4BC,SAAD,IAC5B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,SAAS,CAACC,KADb,EAEE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAID,SAAS,CAACE,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADC,CADL,CAFA;AAaH;;AA7BgC,C,CAgCrC;AACA;AACA;AACA;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAEjC,SAAO;AACLN,IAAAA,WAAW,EAAEM,KAAK,CAACC,UAAN,CAAiBP;AADzB,GAAP;AAGD,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AAEvC,SAAO;AACLvB,IAAAA,cAAc,EAAGS,MAAD,IAAUc,QAAQ,CAACvB,cAAc,CAACS,MAAD,CAAf;AAD7B,GAAP;AAGD,CALD;;AAOA,eAAeV,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItineraries } from '../actions/itineraryActions';\r\n\r\nimport Activity from './Activity'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nclass ItineraryList extends Component{\r\n\r\n  \r\n   \r\n    async componentDidMount() {\r\n      let cityId = this.props.match.params.cityId\r\n       await this.props.getItineraries(cityId)\r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n      // const { itineraries } = this.props.itineraries;\r\n\r\n      \r\n\r\n        return(\r\n\r\n        <ListGroup>\r\n            {this.props.itineraries.map((itinerary) => (\r\n            <ListGroupItem> \r\n              {itinerary.title} \r\n              <Activity itineraryId = {itinerary._id}/>\r\n            </ListGroupItem>\r\n            \r\n            ))}\r\n        </ListGroup>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// ItineraryList.propTypes = {\r\n//     getItineraries: PropTypes.func.isRequired,\r\n//     itineraries: PropTypes.object.isRequired\r\n// }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n \r\n  return {\r\n    itineraries: state.itinerario.itineraries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n    getItineraries: (cityId)=>dispatch(getItineraries(cityId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryList);"]},"metadata":{},"sourceType":"module"}