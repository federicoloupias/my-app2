{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-itinerary\\\\client\\\\src\\\\component\\\\Coment.jsx\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Button, UncontrolledCollapse, CardBody, Card } from 'reactstrap';\nimport { addComent, borrarComent } from '../actions/userActions';\nimport { connect } from 'react-redux';\nimport ShowComments from './ShowComments';\n\nclass Coment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      console.log(this.state.coment);\n      this.props.addComent(this.props.itineraryId, this.props.user._id, this.state.coment);\n    };\n\n    this.editarComent = (itineraryId, comentId) => {};\n\n    this.borrarComent = (itineraryId, comentId) => {\n      this.props.borrarComent(itineraryId, comentId);\n    };\n\n    this.setComents = () => {\n      console.log(this.props.itinerarios);\n    };\n\n    this.state = {\n      coment: '',\n      comentarios: []\n    };\n  }\n\n  componentDidMount() {\n    this.setComents();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Coments\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"value\",\n      id: \"coment\",\n      placeholder: \"Add Coment for this itinerary !\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\"))), this.state.comentarios.map((coment, i) => React.createElement(ShowComments, {\n      com: coment,\n      comentId: coment._id,\n      index: i,\n      id: this.props.id,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    itinerarios: state.itinerario.itineraries\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComent,\n  borrarComent\n})(Coment);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-itinerary/client/src/component/Coment.jsx"],"names":["React","Component","Form","FormGroup","Label","Input","Button","UncontrolledCollapse","CardBody","Card","addComent","borrarComent","connect","ShowComments","Coment","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","console","log","state","coment","itineraryId","user","_id","editarComent","comentId","setComents","itinerarios","comentarios","componentDidMount","render","marginTop","map","i","id","mapStateToProps","auth","itinerario","itineraries"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, FormGroup, Label, Input, Button, UncontrolledCollapse, CardBody, Card  } from 'reactstrap';\r\nimport { addComent,borrarComent } from '../actions/userActions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport ShowComments from './ShowComments';\r\n\r\n\r\nclass Coment extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        coment : '',\r\n        comentarios:[]\r\n      }\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.setComents()\r\n}\r\n    \r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      };\r\n\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.coment)\r\n        this.props.addComent(this.props.itineraryId,this.props.user._id,this.state.coment)\r\n        \r\n      };\r\n\r\n      editarComent  = (itineraryId, comentId)  =>  {\r\n      }\r\n      borrarComent =(itineraryId, comentId)  =>  {\r\n      \r\n        this.props.borrarComent(itineraryId,comentId)\r\n      }\r\n\r\n      setComents = () => {\r\n        console.log(this.props.itinerarios) \r\n\r\n      }\r\n\r\n\r\n    render(){\r\n\r\n\r\n        return(\r\n        <div>\r\n          \r\n        <Form onSubmit={this.onSubmit}>\r\n            <FormGroup>\r\n                <Label for=\"exampleEmail\">Coments</Label>\r\n                <Input type='text'\r\n                  name='value'\r\n                  id='coment'\r\n                  placeholder='Add Coment for this itinerary !'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Submit\r\n                </Button>\r\n            </FormGroup>\r\n        </Form>\r\n\r\n        \r\n    {this.state.comentarios.map((coment, i) => (\r\n      \r\n      <ShowComments com={coment} comentId={coment._id} index={i} id={this.props.id} key={i} />\r\n\r\n      ))}\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n \r\n    return {\r\n      user: state.auth.user,\r\n      itinerarios : state.itinerario.itineraries\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addComent, borrarComent }\r\n  )(Coment);"]},"metadata":{},"sourceType":"module"}