{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Documents\\\\GitHub\\\\my-itinerary\\\\client\\\\src\\\\component\\\\CitiesList.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport { getFilter } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Container } from '@material-ui/core';\n\nclass CitiesList extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        cityFilter: e.target.value\n      });\n      this.filterCities(this.state.cityFilter);\n    };\n\n    this.state = {\n      filteredCities: [],\n      cityFilter: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getItems();\n    await this.setState({\n      filteredCities: this.props.item.items\n    });\n  }\n\n  filterCities(e) {\n    let filteredCities = this.props.item.items;\n    filteredCities = filteredCities.filter(city => {\n      let cityName = city.name.toLowerCase();\n      return cityName.indexOf(e.target.value.toLowerCase()) !== -1;\n    });\n    this.setState({\n      filteredCities\n    });\n    this.props.getFilter(filteredCities);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Filter by Cities: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filter\",\n      onChange: this.filterCities.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), this.state.filteredCities ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.filteredCities.map(items => React.createElement(ListGroupItem, {\n      style: {\n        backgroundImage: \"url(\".concat(items.url, \")\"),\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        width: '300px',\n        height: '80px'\n      },\n      key: items._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Cities/\".concat(items._id),\n      style: {\n        color: 'white',\n        fontSize: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \", items.name)))) : null));\n  }\n\n}\n\nCitiesList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  getFilter\n})(CitiesList);","map":{"version":3,"sources":["C:/Users/me/Documents/GitHub/my-itinerary/client/src/component/CitiesList.jsx"],"names":["React","Component","ListGroup","ListGroupItem","connect","getItems","getFilter","PropTypes","Link","Container","CitiesList","constructor","handleChange","e","setState","cityFilter","target","value","filterCities","state","filteredCities","componentDidMount","props","item","items","filter","city","cityName","name","toLowerCase","indexOf","render","bind","map","backgroundImage","url","backgroundPosition","backgroundSize","width","height","_id","concat","color","fontSize","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport { getFilter } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\n\r\nclass CitiesList extends Component{\r\n  \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          filteredCities: [],\r\n          cityFilter: \"\", \r\n        }\r\n      }\r\n\r\n    async componentDidMount() {\r\n        \r\n       await this.props.getItems();\r\n       await this.setState({\r\n        filteredCities: this.props.item.items\r\n      })\r\n       \r\n       \r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            cityFilter: e.target.value\r\n        })\r\n        this.filterCities(this.state.cityFilter)\r\n      }\r\n\r\n      filterCities (e) {\r\n        let filteredCities = this.props.item.items\r\n        filteredCities = filteredCities.filter((city) => {\r\n          let cityName = city.name.toLowerCase()\r\n          return cityName.indexOf(\r\n            e.target.value.toLowerCase()) !== -1\r\n        })\r\n        this.setState({\r\n          filteredCities\r\n        })\r\n       this.props.getFilter(filteredCities)\r\n      }\r\n\r\n       \r\n        \r\n     \r\n\r\n\r\n    render(){\r\n      \r\n        return(\r\n          \r\n            <div>\r\n              <Container>\r\n            <div>\r\n                <label htmlFor=\"filter\">Filter by Cities: </label>\r\n                <input type=\"text\" id=\"filter\" \r\n                \r\n                onChange={this.filterCities.bind(this)}/>\r\n            </div>\r\n\r\n\r\n            {this.state.filteredCities?\r\n            \r\n        <ListGroup>\r\n            {this.state.filteredCities.map((items) => (\r\n            <ListGroupItem style={{backgroundImage: `url(${items.url})`, backgroundPosition:'center', backgroundSize:'cover', width:'300px',\r\n            height:'80px',}} key={items._id}>\r\n            <Link to={\"/Cities/\".concat(items._id)} style={{color:'white', fontSize:'20px'}}> {items.name}</Link> \r\n            \r\n            </ListGroupItem>\r\n            ))}\r\n        </ListGroup>:null\r\n        }\r\n</Container>\r\n\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nCitiesList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems, getFilter })(CitiesList);"]},"metadata":{},"sourceType":"module"}